---
- name: check 'item' parameter
  assert:
    that:
      - item is defined
      - item | length > 0
    fail_msg: "parameter 'item' incorrect or missing"

- name: Setup variables for Cert
  set_fact:
    ca_private_key_path: "{{ openssl_working_directory }}/ca/{{ openssl_ca_name }}.pem"
    ca_cert_path: "{{ openssl_working_directory }}/ca/{{ openssl_ca_name }}.crt"
    cert_csr_path: "{{ openssl_working_directory }}/csr/{{ item }}.csr.pem"
    cert_directory: "{{ openssl_certificates_directory }}/{{ item }}"
    cert_private_key_path: "{{ openssl_certificates_directory }}/{{ item }}/privkey.pem"
    cert_path: "{{ openssl_certificates_directory }}/{{ item }}/fullchain.pem"
    trust_cert_path: "{{ openssl_certificates_directory }}/{{ item }}/chain.pem"

- name: create certificate directory
  file:
    path: "{{ cert_directory }}"
    state: directory
    owner: root
    group: root
    mode: 0750

- name: Generate an OpenSSL RSA private key
  shell: |
    openssl genrsa -out "{{ cert_private_key_path }}" {{ openssl_cert_key_size }}
  args:
    creates: "{{ cert_private_key_path }}"

- name: Generate an OpenSSL Certificate Signing Request
  shell: |
    openssl req -new -key "{{ cert_private_key_path }}" -out "{{ cert_csr_path }}" -subj "/CN={{ item }}"
  args:
    creates: "{{ cert_csr_path }}"

- name: Generate an OpenSSL certificate signed with your own CA certificate
  shell: |
    openssl x509 -req -in "{{ cert_csr_path }}" -CA "{{ ca_cert_path }}" -CAkey "{{ ca_private_key_path }}" -CAcreateserial -out "{{ cert_path }}" -days 365
  args:
    creates: "{{ cert_path }}"

- name: Create the hard link to CA
  shell: |
    ln -f "{{ ca_cert_path }}" "{{ trust_cert_path }}"
  args:
    creates: "{{ trust_cert_path }}"
